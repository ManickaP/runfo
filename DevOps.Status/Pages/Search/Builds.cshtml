@page
@model BuildsModel

@{
    ViewData["Title"] = "Build Search";
}

<form method="get">
  <div class="form-group">
    <label>Query</label>
    <input name="q" type="text" class="form-control" value="@Model.Query">
  </div>
  <button class="btn btn-primary">Search</button>
</form>

@if (Model.Builds.Count > 0)
{
    <h3>Results</h3>
    <table class="table table-bordered">
        <thead>
            <tr>
                <th scope="col">Build</th>
                <th scope="col">Queued</th>
                <th scope="col">Kind</th>
                <th scope="col">Result</th>
                @if (Model.IncludeDefinitionColumn)
                {
                    <th scope="col">Definition</th>
                }
                @if (Model.IncludeTargetBranchColumn)
                {
                    <th scope="col">Target Branch</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var build in Model.Builds)
            {
                <tr>
                    <td><a asp-page="/view/build" asp-route-number="@build.BuildNumber">@build.BuildNumber</a></td>
                    <td>@build.Queued</td>
                    @if (build.PullRequestKey is { } prKey)
                    {
                        <td><a asp-page="/view/pullrequest" asp-route-repository="@prKey.Repository" asp-route-number="@prKey.Number">@build.Kind</a></td>
                    }
                    else
                    {
                        <td>@build.Kind</td>
                    }
                    <td>@build.Result</td>
                    @if (Model.IncludeDefinitionColumn)
                    {
                        <td><a href="@build.DefinitionUri">@build.Definition</a></td>
                    }
                    @if (Model.IncludeTargetBranchColumn)
                    {
                        <td>@build.TargetBranch</td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">
            @if (Model.PreviousPageNumber is { } previousPageNumber)
            {
                <li class="page-item">
                    <a 
                       class="page-link"
                       asp-page="/Search/Builds"
                       asp-route-q="@Model.Query"
                       asp-route-pageNumber="@previousPageNumber">Previous
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Previous</a>
                </li>
            }
            @if (Model.NextPageNumber is { } nextPageNumber)
            {
                <li class="page-item">
                    <a 
                       class="page-link"
                       asp-page="/Search/Builds"
                       asp-route-q="@Model.Query"
                       asp-route-pageNumber="@nextPageNumber">Next
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1">Next</a>
                </li>
            }
      </ul>
    </nav>

    <div>
        <p>Dates displayed in @Model.DateTimeUtil.TimeZoneInfo.Id</p>
    </div>
}
